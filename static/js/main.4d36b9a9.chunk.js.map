{"version":3,"sources":["components/renderSquare.js","components/Square/index.js","components/Board/index.js","App.js","index.js"],"names":["colors","randomColor","Math","floor","random","length","RenderSquares","x","y","obj","i","j","push","id","color","Square","handleClick","disable","className","onClick","style","background","Board","squares","isStart","endGameFunc","useState","click","setClick","points","setPoints","matchedNumber","moves","endGame","setEndGame","searchMatch","findedElements","filter","square","includes","prev","movesInArray","soloElement","forEach","move","element","cElement","undefined","useEffect","row","sq","nonWhiteColors","map","newData","Array","from","index","e","moveX","moveY","newX","newY","f","currentElement","App","props","alert","setState","state","width","window","innerWidth","console","log","this","render","renderSquare","newGame","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d36b9a9.chunk.js","sourcesContent":["const colors = [ '#244B59', '#41B3A3', '#7Fc7BB', '#F7b733', '#EEAA7B' ];\r\n\r\nexport const randomColor = () => {\r\n\treturn colors[Math.floor(Math.random() * colors.length)];\r\n};\r\n\r\nconst RenderSquares = (x,y) => {\r\n\tconst obj = [];\r\n\tfor (let i = 1; i<=x; i++) {\r\n\t\tfor (let j = 1; j <=y; j++) {\r\n\t\t\tobj.push({ x: i, y: j, id: `${i}${j}`, color: randomColor() });\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nexport default RenderSquares;\r\n","import React from 'react';\r\n\r\nimport './square.css';\r\n\r\nconst Square = ({ x, y, id, color, handleClick, disable }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"square\"\r\n\t\t\tonClick={disable === true ? () => handleClick(x, y, id, color) : null}\r\n\t\t\tstyle={{ background: color }}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Square;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Square from '../Square';\r\nimport { randomColor } from '../renderSquare';\r\nimport './board.css';\r\nconst Board = ({ squares, isStart, endGameFunc }) => {\r\n\tconst [ click, setClick ] = useState(false);\r\n\tconst [ points, setPoints ] = useState(0);\r\n\tconst matchedNumber = [];\r\n\tconst moves = [ [ -1, 0 ], [ 0, 1 ], [ 1, 0 ], [ 0, -1 ] ];\r\n\tconst [ endGame, setEndGame ] = useState(false);\r\n\r\n\tconst handleClick = (x, y, id, color) => {\r\n\t\tif (!click || isStart === false) {\r\n\t\t\tsetClick(true);\r\n\t\t\tmatchedNumber.length = 0;\r\n\t\t\tsearchMatch(x, y, id, color);\r\n\t\t\tif (matchedNumber.length === 1) {\r\n\t\t\t\tsetClick(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst findedElements = squares.filter(square => matchedNumber.includes(square.id));\r\n\t\t\tsetPoints(prev => prev + matchedNumber.length);\r\n\t\t\tmovesInArray(findedElements);\r\n\r\n\t\t\t//check end game\r\n\t\t\tlet soloElement = 0;\r\n\t\t\tsquares.forEach(square => {\r\n\t\t\t\tif (soloElement === 0) {\r\n\t\t\t\t\tmoves.forEach(move => {\r\n\t\t\t\t\t\tconst element = cElement(square.x, square.y, move[0], move[1]);\r\n\t\t\t\t\t\tif (element === undefined) return;\r\n\t\t\t\t\t\tif (element.color === square.color) soloElement++;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (soloElement === 0) {\r\n\t\t\t\tsetEndGame(true);\r\n\t\t\t}\r\n\t\t\tsetClick(false);\r\n\t\t}\r\n\t};\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetPoints(0);\r\n\t\t},\r\n\t\t[ isStart, squares ]\r\n\t);\r\n\tconst movesInArray = findedElements => {\r\n\t\tfindedElements.forEach(x => {\r\n\t\t\tx.color = '#FFFFFF';\r\n\t\t\tconst row = squares.filter(sq => sq.y === x.y);\r\n\r\n\t\t\tconst nonWhiteColors = row.map(({ color }) => color).filter(color => color !== '#FFFFFF');\r\n\t\t\tconst newData = [\r\n\t\t\t\t...Array.from({ length: row.length - nonWhiteColors.length }, () => '#FFFFFF'),\r\n\t\t\t\t...nonWhiteColors\r\n\t\t\t].map((color, index) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...row[index],\r\n\t\t\t\t\tcolor\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\trow.forEach((e, i) => {\r\n\t\t\t\tif (newData[i].color === '#FFFFFF') {\r\n\t\t\t\t\te.color = randomColor();\r\n\t\t\t\t} else {\r\n\t\t\t\t\te.color = newData[i].color;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trow.forEach((e, index) => {});\r\n\t\t});\r\n\t};\r\n\r\n\tconst cElement = (x, y, moveX, moveY) => {\r\n\t\tconst newX = x + moveX;\r\n\t\tconst newY = y + moveY;\r\n\t\tconst element = squares.filter(f => f.x === newX).filter(f => f.y === newY);\r\n\t\treturn element[0];\r\n\t};\r\n\r\n\tconst searchMatch = (x, y, id, color) => {\r\n\t\tmatchedNumber.push(id);\r\n\t\tmoves.forEach(move => {\r\n\t\t\tconst currentElement = cElement(x, y, move[0], move[1]);\r\n\t\t\tif (currentElement === undefined) return;\r\n\r\n\t\t\tif (currentElement.x < 1 || currentElement.y < 1) return;\r\n\r\n\t\t\tif (matchedNumber.includes(currentElement.id)) return;\r\n\r\n\t\t\tif (currentElement.color !== color) return;\r\n\t\t\telse {\r\n\t\t\t\tsearchMatch(currentElement.x, currentElement.y, currentElement.id, color);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{endGame === true ? endGameFunc : ''}\r\n\t\t\t{isStart ? <div> points:{points}</div> : ''}\r\n\t\t\t<div className=\"board\" style={isStart ? {} : { filter: 'grayscale(100%)' }}>\r\n\t\t\t\t{squares.map(({ x, y, id, color }) => (\r\n\t\t\t\t\t<Square x={x} y={y} id={id} color={color} handleClick={handleClick} disable={isStart} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Board;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport renderSquare from './components/renderSquare';\nimport Board from './components/Board';\n// import Board from './components/Board/Board';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisStart: false,\n\t\t\tsquares: [],\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t}\n\tconst;\n\tcomponentDidMount() {\n\t\tconst width = window.innerWidth;\n\t\tconsole.log(width);\n\t\tconsole.log(width);\n\t\tif (width < 500) {\n\t\t\tthis.setState({\n\t\t\t\ty: 5,\n\t\t\t\tx: 10\n\t\t\t});\n\t\t} else if (width > 500 || width < 1000) {\n\t\t\tthis.setState({\n\t\t\t\ty: 7,\n\t\t\t\tx: 8\n\t\t\t});\n\t\t}\n\t\tif (width > 1000) {\n\t\t\tthis.setState({\n\t\t\t\ty: 13,\n\t\t\t\tx: 7\n\t\t\t});\n\t\t}\n\n\t\tconst render = renderSquare(this.state.x, this.state.y);\n\t\tthis.setState({ squares: render, isStart: false });\n\t}\n\tnewGame() {\n\t\tconst render = renderSquare(this.state.x, this.state.y);\n\t\tthis.setState({\n\t\t\tsquares: render,\n\t\t\tisStart: !this.state.isStart\n\t\t});\n\t}\n\tendGame = () => {\n\t\talert('End Game!');\n\t\tthis.setState({\n\t\t\tisStart: true\n\t\t});\n\t};\n\trender() {\n\t\tconst { isStart, squares } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<button className=\"btn\" onClick={() => this.newGame()}>\n\t\t\t\t\t{this.state.isStart ? ' RESET GAME' : 'START GAME'}\n\t\t\t\t</button>\n\t\t\t\t<Board squares={squares} isStart={isStart} endGameFunc={this.endGame} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}